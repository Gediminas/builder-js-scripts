#!/usr/bin/env bash

DIRNAME="${BASH_SOURCE%[/\\]*}"
readarray -t errors   < "$DIRNAME/cfg/match_errors.txt"
readarray -t warnings < "$DIRNAME/cfg/match_warnings.txt"

# for  match in "${errors[@]}"; do
# \	echo "E: {$match}"
# done

# for match in "${warnings[@]}"; do
# 	echo "W: $match"
# done

##################################################
# FUNCTIONS

decorate () {
  forlog=$2

  # HEADER
  if [[ $1 =~ (^#\ ) ]]; then
     [ "$forlog" ] && echo -ne "\e[93m" || echo -ne "# "
     echo -n "$1"
     [ "$forlog" ] && echo -e  "\e[m"
     exit
  fi

  # COMMAND
  if [[ $1 =~ (^>>\ ) ]]; then
     [ "$forlog" ] && echo -ne "\e[96m" || echo -ne "> "
     echo -n "$1"
     [ "$forlog" ] && echo -e  "\e[m"
     exit
  fi

  # DEBUG
  if [[ $1 =~ (^\[DEBUG\]\ ) ]]; then
     [ "$forlog" ] && echo -ne "\e[98m" || echo -ne "D "
     echo -n "$1"
     [ "$forlog" ] && echo -e  "\e[m"
     exit
  fi

  # OK
  if [[ $1 =~ (^\[OK\]\ ) ]]; then
     [ "$forlog" ] && echo -ne "\e[42m" || echo -ne "V "
     echo -n "$1"
     [ "$forlog" ] && echo -e  "\e[m"
     exit
  fi

  # ERROR
  for match in "${warnings[@]}"; do
    if [[ $1 =~ $match ]]; then
      [ "$forlog" ] && echo -ne "\e[7;49;93m[W] " || echo -ne "W "
      echo -n "$1"
      [ "$forlog" ] && echo -e  "\e[m"
      exit
    fi
  done

  # WARNING
  for match in "${errors[@]}"; do
    if [[ $1 =~ $match ]]; then
      [ "$forlog" ] && echo -ne "\e[7;49;91m[E] " || echo -ne "E "
      echo -n "$1"
      [ "$forlog" ] && echo -e  "\e[m"
      exit
    fi
  done

  # OTHER
  [ "$forlog" ] && echo -ne "\e[32m" || echo -ne "< "
  echo -n "$1"
  [ "$forlog" ] && echo -e  "\e[m"
}

teetime () {
  buffer=
  while IFS= read -r -n1 ch; do
    case $ch in
      '')
        std=$(decorate "$buffer" 1)
        log=$(decorate "$buffer")
        echo    "$std"
        echo -n "$(date '+%Y-%m-%d %H:%M:%S') " >> "$1"
        echo    "$log" >> "$1"
        buffer=
        ;;
      $'\r')
        std=$(decorate "$buffer" 1)
        log=$(decorate "$buffer")
        echo -n "$std$ch"
        echo -n "$(date '+%Y-%m-%d %H:%M:%S') " >> "$1"
        echo    "$log" >> "$1"
        buffer=
        ;;
      *)
        buffer=$buffer$ch
        ;;
    esac
  done
}

##################################################
# MAIN

if [ -z "$1" ]; then
    echo "Usage: build some-product"
    exit 1
fi

product=$1
debug=$2
root=$(realpath --no-symlinks "${BASH_SOURCE[0]}")
root=$(dirname "$root")
exe=$(realpath --no-symlinks "$root/recipies/$product.rcpt")

if [ "$debug" == "debug" ]; then
  tmp="$root/_working/$product/_DEBUG"
  rm -fdr "$tmp/_repo"
else
  tmp="$root/_working/$product/$(date '+%Y-%m-%d_%H-%M-%S')"
fi

echo "----------------------------------------"
echo "BUILD: PROD: $exe"
echo "BUILD: TEMP: $tmp"

mkdir -p "$tmp" && pushd "$_" 1>/dev/null || exit
  echo "----------------------------------------"
  "$exe" |& teetime 0000.log
  echo "----------------------------------------"
popd 1>/dev/null 2>&1
